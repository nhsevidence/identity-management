////
/// @group Typography
////

@include default-box-sixing;

/// The default focus style used for elements like anchors and buttons
/// @output the default focus styles ie background colour and outline
/// @since 0.1.0
@mixin default-focus-style {
  outline: 3px solid $colour-focus;
}

/// The inverse focus style used for elements like anchors and buttons
/// on an inverse (dark) background
/// @output the inverse focus styles ie background colour and outline
/// @since 0.3.1
@mixin inverse-focus-style {
  outline: 3px solid $colour-focus-inverse;
}

.nice-tophat {
  // Remove the pesky margin below tophat
  margin-bottom: 0 !important; // sass-lint:disable-line no-important
}

html {
  font-size: rem($nice-root-font-size-min);
  overflow-x: hidden;

  @include mq($from: $nice-root-font-size-min-breakpoint) {
    // sass-lint:disable-block no-duplicate-properties

    // Fallback halfway between max and min for older browsers that don't support calc
    font-size: rem($nice-root-font-size-min + ($nice-root-font-size-max - $nice-root-font-size-min) / 2);
    // Follows "fluid typography" rules: https://www.google.co.uk/search?q=fluid%20typography%20vw
    // ie scales font-size linearly between 2 breakpoints.
    // Also uses rems so that they're relative to browser font size.
    // In form: MIN_FONT_SIZE + (MAX_FONT_SIZE - MIN_FONT_SIZE) * (100vw - MIN_SCREEN_SIZE) / (MAX_SCREEN_SIZE - MIN_SCREEN_SIZE)
    font-size: calc(#{rem($nice-root-font-size-min)} + #{strip-unit(rem($nice-root-font-size-max) - rem($nice-root-font-size-min))} * ((100vw - #{rem($nice-root-font-size-min-breakpoint)}) / #{strip-unit(rem($nice-root-font-size-max-breakpoint) - rem($nice-root-font-size-min-breakpoint))}));
  }

  @include mq($from: $nice-root-font-size-max-breakpoint) {
    font-size: rem($nice-root-font-size-max);
  }
}

body {
  background: $colour-body;
  color: $colour-text;
  font-family: font-family(sans);
  font-style: normal;
  line-height: rem($nice-base-line-height);
  overflow-x: hidden;
  text-rendering: optimizelegibility;
}

img {
  max-width: 100%;
}

hr {
  background: 0;
  border: 0;
  border-top: em(1px) solid $colour-border;
  margin: em($spacing-large 0);
  padding: 0;
}

p,
.p {
  @include p;
}

.lead {
  @include lead;
}

code {
  background: $colour-panel-default;
  border: 1px solid $colour-border;
  border-radius: em($spacing-xx-small);
  color: $colour-text;
  display: inline-block;
  font-family: font-family(mono);
  margin: em(0 0 $spacing-xx-small);
  padding: em(0 $spacing-x-small);

  pre & {
    background: transparent;
    border: 0;
    margin: 0;
  }
}

/// Mark
mark,
.mark {
  background-color: #fff999;
  padding: em(0 $spacing-x-small);
}

/// Small
small,
.small {
  font-size: 85%;
}
